#!/bin/bash
app=btsync_docker
set -e

# Retrieve arguments
domain=$1
path=$2
is_public=$3

path=${path%/}
# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app \
	|| (echo "Path not available: $domain$path" && exit 1)

# Add the redirection
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
sudo yunohost app setting $app domain -v "$domain"
sudo yunohost app setting $app path -v "$path"

# Copy nginx conf file
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Escape uris
sudo yunohost app setting $app is_public -v "$is_public"
if [ "$is_public" = "Yes" ];
then
	sudo yunohost app setting $app skipped_uris -v "/"
fi

#Test if yunohost is dockerized
line = $(grep -s -m 1 -e mum file.txt)
if [$? -eq 1]; then
	
	# Install Docker if it is not installed yet
	if [ -f /usr/bin/docker ]; then
		echo "Docker is already installed"
	else
		echo "Docker will now be installed"
		sudo apt-get install curl -y -qq
		sudo curl -sSL https://get.docker.com/ | sh
		sudo yunohost service add docker
		sudo update-rc.d docker defaults
		sudo service docker start 
		sudo usermod -aG docker admin
		newgrp docker
	fi
	sudo service docker restart
fi

#Install pip if it is not installed yet
if [ -f /usr/bin/pip ]; then
		echo "pip installer is already installed"
	else
		echo "pip installer will now be installed"
		sudo apt-get install python-pip
fi

#Build docker container
echo "Install or upgrade docker-py"
sudo pip install docker-py --upgrade
echo "Start building container..."
sudo python build_container.py

# Reload
sudo service nginx reload
sudo yunohost app ssowatconf
